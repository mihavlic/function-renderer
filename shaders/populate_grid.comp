#version 450
#extension GL_EXT_scalar_block_layout : enable

////// input descriptors, keep this synchronized //////

struct Vertex {
    vec3 position; 
    uint packed_normal;
};

layout(binding = 0, r16f) uniform writeonly image3D function_values;
layout(binding = 1, rgba8) uniform image3D intersections;
layout(binding = 2, r32ui) uniform uimage3D vertex_indices;
layout(binding = 3, scalar) buffer VertexData {
    uint size;
    uint offset;
	Vertex vertices[];
} vertices;
layout(binding = 4, scalar) buffer IndexData {
    uint size;
    uint offset;
	uint indices[];
} indices;
layout(binding = 5, scalar) uniform FunctionData {
	uvec3 size;
    vec3 offset;
    float scale;
    float time;
} function_data;

/////////////////////////////////

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

float density(vec4 data);

void main() {
    uvec3 global_id = gl_GlobalInvocationID.xyz;    
    vec3 pos = vec3(global_id) * function_data.scale - function_data.offset;

    float d = density(vec4(pos, function_data.time));

    imageStore(function_values, ivec3(global_id.xyz), vec4(d));
}
